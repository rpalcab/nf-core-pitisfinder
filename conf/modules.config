/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: MOBSUITE_RECON {
        publishDir = [
            path: {"${params.outdir}/plasmids/${meta.id}/"},
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: RENAME_PLASMIDS {
        publishDir = [
            path: {"${params.outdir}/plasmids/${meta.id}/"},
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: COPLA_COPLADBDOWNLOAD {
        publishDir = [
            enabled: false
        ]
    }

    withName: COPLA_COPLA {
        publishDir = [
            path: {"${params.outdir}/plasmids/${meta.id}/"},
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: INTEGRONFINDER {
        ext.args = '--func-annot'
        publishDir = [
            path: {"${params.outdir}/integrons/"},
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: INTEGRON_PARSER {
        publishDir = [
            path: {"${params.outdir}/integrons/${meta.id}/"},
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: IS_BLAST {
        publishDir = [
            path: {"${params.outdir}/is/ISFinder/"},
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') || filename.endsWith('IS_chr_raw.tsv') ? null : filename }
        ]
    }

    withName: IS_PARSER {
        publishDir = [
            path: {"${params.outdir}/is/ISFinder/"},
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: ISESCAN {
        publishDir = [
            path: {"${params.outdir}/is/ISEScan/"},
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') || filename.endsWith('IS_chr_raw.tsv') ? null : filename }
        ]
    }

    withName: PHASTEST_PHASTESTDBDOWNLOAD {
        publishDir = [
            enabled: false
        ]
    }

    withName: PHASTEST_PHASTEST {
        publishDir = [
            path: {"${params.outdir}/prophages/${meta.id}/"},
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: MACSYFINDER {
        ext.args = '--timeout 30m --db-type ordered_replicon -vv --e-value-search 0.0001'
        publishDir = [
            path: {"${params.outdir}/ICEs/${meta.id}/"},
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

}
